<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAADAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAquMJBZ7bMgAAAAAAAAAAAAAAAArE/xoIwf8+CMH/PgrE
        /xoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABaHeNgSY1+kAYp0aCML/PwfB/64HwP+KCML/XAjC
        /1wHwf+LB8H/rQjA/z0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHX6AjBpHR1ge7+JcDoOBLBZ/dmAWf
        3Z8Gn91aAKrVBgDM/woHwf+PB8D/bQAAAAAAAAAAAAAAAAAAAAAAAAAAB8D/RQa29Z4FhsTdBJnWhACh
        1xMAn98IBqfldwe18sIHvPm2CMH/qQbA/58Iwf9CAAAAAAAAAAAAAAAAAAAAAAfB/64Dpd9PBpfUiQRf
        nrYAZKYXCMD/hgbA/58IwfchBZ/dqgWt7pYHv/9IB8H/rQAAAAAAAAAAAAAAAAjD/yIHwf+MBaDdlgCh
        1xMHY6MkBqLh4we09HQHfLhvBny24QSBvEUFod7ECLTwIgfA/44Iv/8gAAAAAAAAAAAHwP9JCML/YAWf
        3ZcAnOMSCML/hQmw7ngGc6/jBny3/wd8t+oGrO0rB7HvrQWf3mUIwf9iB7//SAAAAAAAAAAAB7//SAjA
        /2EFntxfBqjnfgfC/5oFfbhoBny3/gVtqtEGfbhaB8H/tga0+SwFn92cCMH/YwfC/0cAAAAAAAAAAAe9
        /yMHwf+MAJLbBwe29cMJu/ceBny35wV8tugFe7hdBXy7xwau7lgAmeYKBZ/dlQfB/48Iwf8hAAAAAAAA
        AAAAAAAAB8D/swDG/wkHuvi2BZ/dqgSCvj8GpuYoB8D/swim41wEX562BJnWdQOj31AHwf+yAAAAAAAA
        AAAAAAAAAAAAAAfB/0YHwP+OB8H/uQSw7ocFod7DB7LwrAa39C4AnOMSBpTUgQWHx+AHu/qaCML/QwAA
        AAAAAAAAAAAAAAAAAAAAAAAAB8H/bwfA/5sHwv9HCbD2HQWf3WIFn96gBZ/dlwak4VQGuPeeBpHQ1QBd
        ohYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIwv8/B8H/sAfA/4oIwv9cCML/XAfB/4sHwP+vCMD/PQBh
        nh0EmtjtBZ/dNQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHxP8nCL//RAi//0QHxP8nAAAAAAAA
        AAAAAAAABaDcMwCf3wgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAD//wAA2Z8AAOTvAADjhwAA0ksAAM2rAADqLwAA+lcAANSz
        AADTWwAA4McAAPcnAAD5mwAA//8AAP//AAAoAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB6DbIwWf3Z8GodxRAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAB7//JAfC/2wHwf+LBsH/pAbB/6QHwf+LB8H/awe//yQAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFoNybBZ/d/wWd
        3PUAAAAAAAAAAAAAAAAAqv8DCMH/YwfB/9UHwf//B8H/8gfA/9QHwv+/B8L/vwfA/9QHwf/yB8H//wfA
        /9QIwP9hAP//AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaf
        3VIFndr0BYbE/wVfnnEAAAAABb//NAfB/9EHwf/8BsH/oQfC/0cA1f8GAAAAAAAAAAAAAAAAAAAAAADV
        /wYHv/9IBsL/ogfB//0Hwf/PBcH/MQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAEX558BF+e/QWX1psHwf/2B8H/wAbB/y0AAAAACaLdHgSg3j4Ent1EBqDbKwCZ
        zAUAAAAAAAAAAAAAAAAAAAAABsL/LgfC/8MHwf/1BsH/VwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFk9GqB8D//weq6LoAzP8FBp/dUgWf3ckFn93/BZ/d/wWf
        3f8Fn93/BZ/d8QWf3KIHod0mAAAAAAAAAAAAAAAAAL//BAfB/48Hwf/+BsH/VwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABcL/NgfB//cHp+TEBGCg/QWV0scFn938BZ/dpASe
        3EIAmeYKAAAAAAeg2yMEnt50BZ/d3gSg3+QGt/apCMH/ygfB/+kHwf/EB8D/SQfB/5AHwf/2BcP/MwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD//wIHwf/SB8H/wACq/wYFk9HSBZvZ/wR+
        vY4AAAAAAAAAAAAAAAAAAAAAAAAAAAi9/x8HwP+zB8H//we//eAGr+21BrTwiAbB/6QHwf/8CcP/NwfC
        /8MHwf/OAP//AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACML/XAfB//sGwv8qBZ7dYQWg
        3fsFebecBF+e/QVgn2UAAAAAAAAAAAAAAAAHwf9vB8H/9AfB/9cGwv9PCaTkHAWf3cgFn933BJ7cOgfB
        /9UIwf+EBsH/LQfB//wGwv9YAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHwf/NB8H/nAAA
        AAAFoN3bBZ/ekgAAAAAEX557BF+e/QVgn2UAv/8EB8L/mgfB//4Iwf+HANX/BgAAAAAAAAAAAJ/fCAWg
        3cMGn93mBrz7zgfB/4sAAAAABsD/nwjB/8oAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACL3/HwfB
        //4Iwv9DBp/fKAWf3f8Fn98wAAAAAAAAAAAEX557BGOi/Qez8tIHwf/1BsL/UAAAAAAGebYqBny2pQZ8
        t+YHe7Z0AKLcFgaf3ecFo+LQCMH/XgAAAAAHwf9GB8H//gnB/x0AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAHwf9nB8H/8QDM/wUHoN5OBZ/d/wCS2wcAAAAAAAAAAAC//wQHsO/ZB7r4/weKx4kAVaoDBny4hAZ8
        t/wGfLf/Bny3/wZ9tokAAAAACKLjYwWf3f8DouFNAAAAAADV/wYHwf/zCML/ZAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAjC/4UHwf/PAAAAAAeg3k4Fn93/AKrjCQAAAAAAAAAAB8H/lwfB//IFgsGXBGGg/QZ4
        tNcGfLf/Bny3/wZ8t/8GfLf+BX23NQD//wEGwf/IBaDe1wWf3KIAAAAAAAAAAAfB/9IIwf+DAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAABsD/nwfB/7YAAAAABaHbMQWf3f8FoNwzAAAAAAfC/2wHwf/8B8H/RgCA
        vwQGd7TcBny3/wZ7t/4GfLf/Bny3/wZ8t6YAAAAAB8L/aAfB//oGpeKFBZ/d8QCq4wkAAAAAB8L/twbC
        /54AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGwf+dB8L/twAAAAAAqv8DBZ/d7waf3YcIvf8fB8H/9AbA
        /34AAAAABny3igZ8t/8GfLb8BGek/gV1sb0GfbfZAICvEAXD/y8Hwf/0CMD/hgaf3ygFn93/BJ7cOgAA
        AAAHwf+4B8H/nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjB/4QHwP/QAAAAAAAAAAAFn92YBZ/d4gfA
        /7UHwP/QAL//BAV6uDIGfLf9Bny3/wZ8t/8FdLDFBF+e/gRlo3IMwv8VB8L/4AfB/88AzP8KAAAAAAWg
        3fsGoN5WAAAAAAfB/9IIwP+CAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB8H/ZwfB//EAzP8FAAAAAAed
        3icFoODVB8H//wi//0QAAAAABn23rgZ8t/8GfLf/Bny3/wZ8uNYGZqKHBF+e/gag36cHwf/kCb//HAAA
        AAAAAAAABaDd8wag3VMA1f8GB8H/8wjC/2QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIwf8hB8H//wjC
        /0MAAAAAAAAAAAe7+7MGvfvYCaLdHgAAAAAGfLftBny3/wZ8t/4GfLeiAHaxDQm//xwHouC+BGCf/gZ4
        tncAAAAAAAAAAAeh3SYFn93/BqDbKwfB/0YHwf/+CL3/HwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAHwf/RB8H/nAAAAAAAAAAAB8H/6Aau7bcFoN3LAJ/fCAZ8t3kGfbaJBXu2OAAAAAAFwP81B8H/5gfB
        /9sGcbCIBF+e/gVgn2UAAAAABqDegwWf3doAAAAABsD/nwfB/88AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAjB/2MHwf/6B8H/JQD//wEHwf//CLj1fQWf3uwFnt2+AJ/fEAAAAAAAv/8EB8D/bQfB
        //YHwf/BDbz/EwAAAAAEX557BF+e/gZysnsFn933BZ7cXwa//ygHwf/7CMH/XwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAKr/AwfB/9MHwv+3AP//AgfB/98Hwv+aB6HdJgWf3dUFn93iCKXjYwfB
        /9IHwf/4BsH/fADM/wUAAAAAAAAAAAAAAAAGbKuJBZXT/waX1dIAv/8EB8H/ugfA/9AA//8CAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABcL/NgfB//cHwv+JCMH/XgfB//0Gwf/IBr/8xgWo
        5r8Fn936BZ/e3Qak4YoGn98oAP//AQAAAAAGntsqBp/eggWf3fEGlNLZBGCg/gep5roHwf/2BcP/MwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABsH/WgfB//4Iwf+HBcL/MgbC
        /30Iwf+IBsH/WwWo5jIFnt6ZBaDd8wWf3f8Fn93/BZ/d/wWf3f8Fn93SBp7eXAD//wMHpOPCB8D//wWX
        1poAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABsD/WQfB
        //YHwf+0B7//JAAAAAAAAAAAAAAAAAAAAAAAqv8DBqLgKQSe3UQEntxCCJ/fIAAAAAAHw/8mB8H/tgfB
        //UFktCoBF+e/gVgn2UAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAABb//NAfB/9EHwf/7BsH/oAfC/0cA1f8GAAAAAAAAAAAAAAAAAAAAAADV/wYHv/9IBsH/oQfB
        //sHwf/PBcH/MQAAAAAFYJ9tBYfF/wWe3PgGn9xQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAKr/AwjB/2MHwf/VB8H//wfB//IHwP/UB8L/vwfC/78HwP/UB8H/8gfB
        //8HwP/UCMD/YQD//wIAAAAAAAAAAAAAAAAFntz2BZ/d/wWe3pkAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHv/8kB8L/bAfB/4sGwf+kBsH/pAfB
        /4sHwf9rB7//JAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaf3VIFoN2eCJ7aIgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////////////////f8P//j4Af/84/x//w//P/8YD5//A+BP/kf
        gJ/7HzJf8mx4T/bxzO/28Qbv5uAMZ+bsDGfmWBln5hgzZ/cwB2/3MM9v8xuGT/tPOt/5JPif/IDwP/5s
        Bj//P/w//4/xz//gB8f//D/v////////////////
</value>
  </data>
</root>